{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nconst _hoisted_2 = {\n  class: \"\"\n};\nconst _hoisted_3 = {\n  class: \"\"\n};\nconst _hoisted_4 = {\n  class: \"\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"alert alert-success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"Sign Up\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    class: \"\",\n    placeholder: \"Username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    class: \"\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    class: \"\",\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Confirm Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password_confirm = $event),\n    class: \"\",\n    placeholder: \"Confirm Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password_confirm]])]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"\"\n  }, \"Sign Up\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_createElementVNode","_hoisted_1","type","$event","$data","username","placeholder","required","_hoisted_2","email","_hoisted_3","password","_hoisted_4","password_confirm","errorMessage","_hoisted_5","_toDisplayString","_createCommentVNode","successMessage","_hoisted_6"],"sources":["D:\\Studium\\Semester 7\\Bachlor Projekt\\Programm\\project\\src\\components\\RegisterComponent.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <h3>Sign Up</h3>\r\n\r\n        <div class=\"\">\r\n            <label>Username</label>\r\n            <input type=\"text\" v-model=\"username\" class=\"\" placeholder=\"Username\" required>\r\n        </div>\r\n\r\n        <div class=\"\">\r\n            <label>Email</label>\r\n            <input type=\"email\" v-model=\"email\" class=\"\" placeholder=\"Email\" required>\r\n        </div>\r\n\r\n        <div class=\"\">\r\n            <label>Password</label>\r\n            <input type=\"password\" v-model=\"password\" class=\"\" placeholder=\"Password\" required>\r\n        </div> \r\n\r\n        <div class=\"\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" v-model=\"password_confirm\" class=\"\" placeholder=\"Confirm Password\" required>\r\n        </div>\r\n\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger\">\r\n            {{ errorMessage }}\r\n        </div>\r\n        <div v-if=\"successMessage\" class=\"alert alert-success\">\r\n            {{ successMessage }}\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"\">Sign Up</button>\r\n    </form>\r\n    \r\n</template>\r\n\r\n<script>\r\n\r\n    //import axios from 'axios'\r\n\r\n    export default{\r\n        name: 'RegisterComponent',\r\n        data(){\r\n            return{\r\n                username:'',\r\n                email: '',\r\n                password: '',\r\n                password_confirm: '',\r\n                errorMessage: '',\r\n                successMessage: ''\r\n            }\r\n        },\r\n        methods: {\r\n            validatePassword(password){\r\n                const minLength = 8;\r\n                const hasUpperCase = /[A-Z]/.test(password);\r\n                const hasLowerCase = /[a-z]/.test(password);\r\n                const hasNumber = /[0-9]/.test(password);\r\n                const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n\r\n                if(password.length < minLength){\r\n                    return \"Password must be at least 8 characters long.\";\r\n                }\r\n                if (!hasUpperCase) {\r\n                return \"Password must contain at least one uppercase letter.\";\r\n                }\r\n                if (!hasLowerCase) {\r\n                    return \"Password must contain at least one lowercase letter.\";\r\n                }\r\n                if (!hasNumber) {\r\n                    return \"Password must contain at least one number.\";\r\n                }\r\n                if (!hasSpecialChar) {\r\n                    return \"Password must contain at least one special character.\";\r\n                }\r\n                return null; // No errors\r\n            },\r\n\r\n\r\n            handleSubmit(){\r\n                //Checking the password requirements\r\n                const passwordError = this.validatePassword(this.password);\r\n                if(passwordError){\r\n                    this.errorMessage = passwordError;\r\n                    this.successMessage = '';\r\n                    return\r\n                }\r\n\r\n                //Check if password is the same\r\n                if(this.password !== this.password_confirm){\r\n                    this.errorMessage =\"The passwords don't match.\"\r\n                    this.successMessage = '';\r\n                    return\r\n                }\r\n                \r\n\r\n\r\n\r\n                const data = {\r\n                    username: this.username,\r\n                    email: this.email,\r\n                    password: this.password\r\n                }\r\n\r\n                console.log(data)\r\n                // axios.post('http://localhost:8100/register',data)\r\n                //     .then(\r\n                //         res => {\r\n                //             console.log(res)\r\n                //         }\r\n                //     ).catch(\r\n                //         err =>{\r\n                //             console.log(err)\r\n                //         }\r\n                //     )\r\n            }\r\n        }\r\n    }\r\n\r\n</script>"],"mappings":";;EAIaA,KAAK,EAAC;AAAE;;EAKRA,KAAK,EAAC;AAAE;;EAKRA,KAAK,EAAC;AAAE;;EAKRA,KAAK,EAAC;AAAE;;EAnBrBC,GAAA;EAwBiCD,KAAK,EAAC;;;EAxBvCC,GAAA;EA2BmCD,KAAK,EAAC;;;uBA1BrCE,mBAAA,CA+BO;IA/BAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADjBC,cAAA,KAAAC,IAAA,KAC2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;gCAC/BG,mBAAA,CAAgB,YAAZ,SAAO,sBAEXA,mBAAA,CAGM,OAHNC,UAGM,G,0BAFFD,mBAAA,CAAuB,eAAhB,UAAQ,sB,gBACfA,mBAAA,CAA+E;IAAxEE,IAAI,EAAC,MAAM;IAN9B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMwCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEZ,KAAK,EAAC,EAAE;IAACe,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA1CH,KAAA,CAAAC,QAAQ,E,KAGxCL,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFFR,mBAAA,CAAoB,eAAb,OAAK,sB,gBACZA,mBAAA,CAA0E;IAAnEE,IAAI,EAAC,OAAO;IAX/B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAWyCC,KAAA,CAAAK,KAAK,GAAAN,MAAA;IAAEZ,KAAK,EAAC,EAAE;IAACe,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAApCH,KAAA,CAAAK,KAAK,E,KAGtCT,mBAAA,CAGM,OAHNU,UAGM,G,0BAFFV,mBAAA,CAAuB,eAAhB,UAAQ,sB,gBACfA,mBAAA,CAAmF;IAA5EE,IAAI,EAAC,UAAU;IAhBlC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAgB4CC,KAAA,CAAAO,QAAQ,GAAAR,MAAA;IAAEZ,KAAK,EAAC,EAAE;IAACe,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA1CH,KAAA,CAAAO,QAAQ,E,KAG5CX,mBAAA,CAGM,OAHNY,UAGM,G,0BAFFZ,mBAAA,CAA+B,eAAxB,kBAAgB,sB,gBACvBA,mBAAA,CAAmG;IAA5FE,IAAI,EAAC,UAAU;IArBlC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAqB4CC,KAAA,CAAAS,gBAAgB,GAAAV,MAAA;IAAEZ,KAAK,EAAC,EAAE;IAACe,WAAW,EAAC,kBAAkB;IAACC,QAAQ,EAAR;iDAA1DH,KAAA,CAAAS,gBAAgB,E,KAGzCT,KAAA,CAAAU,YAAY,I,cAAvBrB,mBAAA,CAEM,OAFNsB,UAEM,EAAAC,gBAAA,CADCZ,KAAA,CAAAU,YAAY,oBAzB3BG,mBAAA,gBA2BmBb,KAAA,CAAAc,cAAc,I,cAAzBzB,mBAAA,CAEM,OAFN0B,UAEM,EAAAH,gBAAA,CADCZ,KAAA,CAAAc,cAAc,oBA5B7BD,mBAAA,gB,4BA+BQjB,mBAAA,CAA+C;IAAvCE,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC;KAAG,SAAO,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}