{"ast":null,"code":"import { Geolocation } from '@capacitor/geolocation';\nimport { Permissions } from '@capacitor/core';\nexport default {\n  name: 'DistanceForm',\n  data() {\n    return {\n      distance: '',\n      // Speichert die eingegebene Distanz\n      submitted: false,\n      // Gibt an, ob das Formular bereits abgesendet wurde\n      location: null // Speichert den aktuellen Standort\n    };\n  },\n  methods: {\n    // Formular abschicken und Distanz speichern\n    async handleSubmit() {\n      this.submitted = true;\n      localStorage.setItem('distanceToTree', this.distance);\n      console.log(`Distanz zum Baum gespeichert: ${this.distance} Meter`);\n    },\n    // Standort abrufen\n    async getLocation() {\n      try {\n        // Anfrage der Berechtigung zur Nutzung des Standorts\n        const permission = await Permissions.query({\n          name: 'location'\n        });\n\n        // Wenn die Berechtigung nicht erteilt wurde, zeige eine Nachricht an\n        if (permission.state !== 'granted') {\n          console.error('Standortberechtigung nicht erteilt');\n          return;\n        }\n\n        // Anfrage für den genauen Standort (ACCESS_FINE_LOCATION)\n        const position = await Geolocation.getCurrentPosition({\n          enableHighAccuracy: true // Anfrage für genaue Position\n        });\n\n        // Standort speichern\n        this.location = position.coords;\n        console.log('Standort abgerufen:', this.location);\n      } catch (error) {\n        console.error('Fehler beim Abrufen des Standorts:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Geolocation","Permissions","name","data","distance","submitted","location","methods","handleSubmit","localStorage","setItem","console","log","getLocation","permission","query","state","error","position","getCurrentPosition","enableHighAccuracy","coords"],"sources":["C:\\Users\\madiw\\Desktop\\Hochschule\\7. Semester\\Bachelorprojekt\\projekt\\src\\components\\testapp.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h1>Distanz zum Baum und Standort</h1>\r\n\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"distance\">Wie weit sind Sie vom Baum entfernt (in Metern)?</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"distance\"\r\n          v-model=\"distance\"\r\n          required\r\n          min=\"0\"\r\n          step=\"0.1\"\r\n          placeholder=\"z. B. 25.5\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"submit-button\">Absenden</button>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"form-group\">\r\n      <button @click=\"getLocation\" class=\"location-button\">Standort abrufen</button>\r\n    </div>\r\n\r\n    <!-- Anzeige des Standorts -->\r\n    <div v-if=\"location\">\r\n      <p>Aktueller Standort: {{ location.latitude }}°, {{ location.longitude }}°</p>\r\n      <p>Genauigkeit: {{ location.accuracy }} Meter</p>\r\n    </div>\r\n\r\n    <!-- Anzeige der eingegebenen Distanz -->\r\n    <div v-if=\"submitted\">\r\n      <p>Die eingegebene Distanz zum Baum beträgt: <strong>{{ distance }} Meter</strong></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Geolocation } from '@capacitor/geolocation';\r\nimport { Permissions } from '@capacitor/core';\r\n\r\nexport default {\r\n  name: 'DistanceForm',\r\n  data() {\r\n    return {\r\n      distance: '', // Speichert die eingegebene Distanz\r\n      submitted: false, // Gibt an, ob das Formular bereits abgesendet wurde\r\n      location: null, // Speichert den aktuellen Standort\r\n    };\r\n  },\r\n  methods: {\r\n    // Formular abschicken und Distanz speichern\r\n    async handleSubmit() {\r\n      this.submitted = true;\r\n      localStorage.setItem('distanceToTree', this.distance);\r\n      console.log(`Distanz zum Baum gespeichert: ${this.distance} Meter`);\r\n    },\r\n\r\n    // Standort abrufen\r\n    async getLocation() {\r\n      try {\r\n        // Anfrage der Berechtigung zur Nutzung des Standorts\r\n        const permission = await Permissions.query({ name: 'location' });\r\n        \r\n        // Wenn die Berechtigung nicht erteilt wurde, zeige eine Nachricht an\r\n        if (permission.state !== 'granted') {\r\n          console.error('Standortberechtigung nicht erteilt');\r\n          return;\r\n        }\r\n\r\n        // Anfrage für den genauen Standort (ACCESS_FINE_LOCATION)\r\n        const position = await Geolocation.getCurrentPosition({\r\n          enableHighAccuracy: true, // Anfrage für genaue Position\r\n        });\r\n\r\n        // Standort speichern\r\n        this.location = position.coords;\r\n        console.log('Standort abgerufen:', this.location);\r\n      } catch (error) {\r\n        console.error('Fehler beim Abrufen des Standorts:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Grundlegendes Styling für das Formular */\r\n.form-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n  display: block;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton.submit-button, .location-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton.submit-button:hover, .location-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\ndiv p {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,SAASA,WAAU,QAAS,wBAAwB;AACpD,SAASC,WAAU,QAAS,iBAAiB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,SAAS,EAAE,KAAK;MAAE;MAClBC,QAAQ,EAAE,IAAI,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACH,SAAQ,GAAI,IAAI;MACrBI,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAACN,QAAQ,CAAC;MACrDO,OAAO,CAACC,GAAG,CAAC,iCAAiC,IAAI,CAACR,QAAQ,QAAQ,CAAC;IACrE,CAAC;IAED;IACA,MAAMS,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;QACA,MAAMC,UAAS,GAAI,MAAMb,WAAW,CAACc,KAAK,CAAC;UAAEb,IAAI,EAAE;QAAW,CAAC,CAAC;;QAEhE;QACA,IAAIY,UAAU,CAACE,KAAI,KAAM,SAAS,EAAE;UAClCL,OAAO,CAACM,KAAK,CAAC,oCAAoC,CAAC;UACnD;QACF;;QAEA;QACA,MAAMC,QAAO,GAAI,MAAMlB,WAAW,CAACmB,kBAAkB,CAAC;UACpDC,kBAAkB,EAAE,IAAI,CAAE;QAC5B,CAAC,CAAC;;QAEF;QACA,IAAI,CAACd,QAAO,GAAIY,QAAQ,CAACG,MAAM;QAC/BV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACN,QAAQ,CAAC;MACnD,EAAE,OAAOW,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}