{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      trees: [{\n        id: 1,\n        species: 'Eiche',\n        height: 15.5,\n        circumference: 2.3,\n        location: 'Waldweg 12, Berlin',\n        date: '2024-12-01',\n        imageUrl: 'https://example.com/eiche.jpg'\n      }, {\n        id: 2,\n        species: 'Buche',\n        height: 20.2,\n        circumference: 3.1,\n        location: 'Parkstraße 5, Hamburg',\n        date: '2024-11-20',\n        imageUrl: 'https://example.com/buche.jpg'\n      }, {\n        id: 3,\n        species: 'Ahorn',\n        height: 10.8,\n        circumference: 1.7,\n        location: 'Forstweg 3, München',\n        date: '2024-12-05',\n        imageUrl: 'https://example.com/ahorn.jpg'\n      }]\n    };\n  },\n  computed: {\n    filteredTrees() {\n      return this.trees.filter(tree => tree.species.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    averageHeight() {\n      if (!this.trees.length) return 0;\n      const totalHeight = this.trees.reduce((sum, tree) => sum + tree.height, 0);\n      return (totalHeight / this.trees.length).toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["data","searchQuery","trees","id","species","height","circumference","location","date","imageUrl","computed","filteredTrees","filter","tree","toLowerCase","includes","averageHeight","length","totalHeight","reduce","sum","toFixed"],"sources":["D:\\Studium\\Semester 7\\Bachlor Projekt\\Programm\\project\\src\\components\\OverviewComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Meine gemessenen Bäume</h1>\r\n\r\n    <!-- Suchfunktion -->\r\n    <input v-model=\"searchQuery\" placeholder=\"Baumart suchen\" />\r\n\r\n    <!-- Tabelle -->\r\n    <table class=\"table-ui\">\r\n      <thead>\r\n        <tr>\r\n          <th>Bild</th>\r\n          <th>Baumart</th>\r\n          <th>Höhe (m)</th>\r\n          <th>Standort</th>\r\n          <th>Datum</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"tree in filteredTrees\" :key=\"tree.id\">\r\n          <td><img :src=\"tree.imageUrl\" alt=\"Bild von {{ tree.species }}\" class=\"tree-image\"/></td>\r\n          <td>{{ tree.species }}</td>\r\n          <td>{{ tree.height }}</td>\r\n          <td>{{ tree.location }}</td>\r\n          <td>{{ tree.date }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Statistiken -->\r\n    <div>\r\n      <p>Gesamtanzahl der Bäume: {{ trees.length }}</p>\r\n      <p>Durchschnittliche Höhe: {{ averageHeight }} m</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      trees: [\r\n        { id: 1, species: 'Eiche', height: 15.5, circumference: 2.3, location: 'Waldweg 12, Berlin', date: '2024-12-01', imageUrl: 'https://example.com/eiche.jpg' },\r\n        { id: 2, species: 'Buche', height: 20.2, circumference: 3.1, location: 'Parkstraße 5, Hamburg', date: '2024-11-20', imageUrl: 'https://example.com/buche.jpg' },\r\n        { id: 3, species: 'Ahorn', height: 10.8, circumference: 1.7, location: 'Forstweg 3, München', date: '2024-12-05', imageUrl: 'https://example.com/ahorn.jpg' }\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTrees() {\r\n      return this.trees.filter(tree =>\r\n        tree.species.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    averageHeight() {\r\n      if (!this.trees.length) return 0;\r\n      const totalHeight = this.trees.reduce((sum, tree) => sum + tree.height, 0);\r\n      return (totalHeight / this.trees.length).toFixed(2);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  margin-top: 20px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table-ui {\r\n  border: 1px solid black;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n}\r\n\r\n.tree-image {\r\n  width: 100px;\r\n  height: auto;\r\n}\r\n</style>\r\n"],"mappings":";;;AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,IAAI;QAAEC,aAAa,EAAE,GAAG;QAAEC,QAAQ,EAAE,oBAAoB;QAAEC,IAAI,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAgC,CAAC,EAC5J;QAAEN,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,IAAI;QAAEC,aAAa,EAAE,GAAG;QAAEC,QAAQ,EAAE,uBAAuB;QAAEC,IAAI,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAgC,CAAC,EAC/J;QAAEN,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,IAAI;QAAEC,aAAa,EAAE,GAAG;QAAEC,QAAQ,EAAE,qBAAqB;QAAEC,IAAI,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAgC;IAEhK,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,IAAG,IAC1BA,IAAI,CAACT,OAAO,CAACU,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACd,WAAW,CAACa,WAAW,CAAC,CAAC,CACpE,CAAC;IACH,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACd,KAAK,CAACe,MAAM,EAAE,OAAO,CAAC;MAChC,MAAMC,WAAU,GAAI,IAAI,CAAChB,KAAK,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAE,GAAIP,IAAI,CAACR,MAAM,EAAE,CAAC,CAAC;MAC1E,OAAO,CAACa,WAAU,GAAI,IAAI,CAAChB,KAAK,CAACe,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC;IACrD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}