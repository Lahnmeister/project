{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table-ui\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Meine gemessenen Bäume\", -1 /* HOISTED */)), _createCommentVNode(\" Suchfunktion \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Baumart suchen\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createCommentVNode(\" Tabelle \"), _createElementVNode(\"table\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Baumart\"), _createElementVNode(\"th\", null, \"Höhe (m)\"), _createElementVNode(\"th\", null, \"Standort\"), _createElementVNode(\"th\", null, \"Datum\"), _createElementVNode(\"th\", null, \"Aktionen\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTrees, tree => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: tree.id\n    }, [_createElementVNode(\"td\", null, [tree.editing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": $event => tree.species = $event\n    }, null, 8 /* PROPS */, _hoisted_2)), [[_vModelText, tree.species]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(_toDisplayString(!tree.editing && tree.species), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [tree.editing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": $event => tree.height = $event\n    }, null, 8 /* PROPS */, _hoisted_3)), [[_vModelText, tree.height]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(_toDisplayString(!tree.editing && tree.height), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [tree.editing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": $event => tree.location = $event\n    }, null, 8 /* PROPS */, _hoisted_4)), [[_vModelText, tree.location]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(_toDisplayString(!tree.editing && tree.location), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [tree.editing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": $event => tree.date = $event\n    }, null, 8 /* PROPS */, _hoisted_5)), [[_vModelText, tree.date]]) : _createCommentVNode(\"v-if\", true), _createTextVNode(_toDisplayString(!tree.editing && tree.date), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => tree.editing = !tree.editing\n    }, _toDisplayString(tree.editing ? 'Speichern' : 'Bearbeiten'), 9 /* TEXT, PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Statistiken \"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"Gesamtanzahl der Bäume: \" + _toDisplayString($data.trees.length), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Durchschnittliche Höhe: \" + _toDisplayString($options.averageHeight) + \" m\", 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","_cache","$event","$data","searchQuery","placeholder","_hoisted_1","_Fragment","_renderList","$options","filteredTrees","tree","key","id","editing","species","_hoisted_2","_createTextVNode","_toDisplayString","height","_hoisted_3","location","_hoisted_4","date","_hoisted_5","onClick","_hoisted_6","trees","length","averageHeight"],"sources":["D:\\Studium\\Semester 7\\Bachlor Projekt\\Programm\\project\\src\\components\\OverviewComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Meine gemessenen Bäume</h1>\r\n\r\n    <!-- Suchfunktion -->\r\n    <input v-model=\"searchQuery\" placeholder=\"Baumart suchen\" />\r\n\r\n    <!-- Tabelle -->\r\n    <table class=\"table-ui\">\r\n      <thead>\r\n        <tr>\r\n          <th>Baumart</th>\r\n          <th>Höhe (m)</th>\r\n          <th>Standort</th>\r\n          <th>Datum</th>\r\n          <th>Aktionen</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"tree in filteredTrees\" :key=\"tree.id\">\r\n          <td><input v-if=\"tree.editing\" v-model=\"tree.species\" />{{ !tree.editing && tree.species }}</td>\r\n          <td><input v-if=\"tree.editing\" v-model=\"tree.height\" />{{ !tree.editing && tree.height }}</td>\r\n          <td><input v-if=\"tree.editing\" v-model=\"tree.location\" />{{ !tree.editing && tree.location }}</td>\r\n          <td><input v-if=\"tree.editing\" v-model=\"tree.date\" />{{ !tree.editing && tree.date }}</td>\r\n          <td>\r\n            <button @click=\"tree.editing = !tree.editing\">{{ tree.editing ? 'Speichern' : 'Bearbeiten' }}</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Statistiken -->\r\n    <div>\r\n      <p>Gesamtanzahl der Bäume: {{ trees.length }}</p>\r\n      <p>Durchschnittliche Höhe: {{ averageHeight }} m</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      trees: [\r\n        {\r\n          id: 1,\r\n          species: 'Eiche',\r\n          height: 15.5,\r\n          circumference: 2.3,\r\n          location: 'Waldweg 12, Berlin',\r\n          date: '2024-12-01',\r\n          editing: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          species: 'Buche',\r\n          height: 20.2,\r\n          circumference: 3.1,\r\n          location: 'Parkstraße 5, Hamburg',\r\n          date: '2024-11-20',\r\n          editing: false,\r\n        },\r\n        {\r\n          id: 3,\r\n          species: 'Ahorn',\r\n          height: 10.8,\r\n          circumference: 1.7,\r\n          location: 'Forstweg 3, München',\r\n          date: '2024-12-05',\r\n          editing: false,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTrees() {\r\n      return this.trees.filter(tree => tree.species.toLowerCase().includes(this.searchQuery.toLowerCase()));\r\n    },\r\n    averageHeight() {\r\n      if (!this.trees.length) return 0;\r\n      const totalHeight = this.trees.reduce((sum, tree) => sum + tree.height, 0);\r\n      return (totalHeight / this.trees.length).toFixed(2);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  margin-top: 20px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table-ui {\r\n  border: 1px solid black;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}