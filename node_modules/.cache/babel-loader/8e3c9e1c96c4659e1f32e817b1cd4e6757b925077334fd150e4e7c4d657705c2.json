{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      trees: [{\n        id: 1,\n        species: 'Eiche',\n        height: 15.5,\n        circumference: 2.3,\n        location: 'Waldweg 12, Berlin',\n        date: '2024-12-01'\n      }, {\n        id: 2,\n        species: 'Buche',\n        height: 20.2,\n        circumference: 3.1,\n        location: 'Parkstraße 5, Hamburg',\n        date: '2024-11-20'\n      }],\n      searchQuery: '',\n      selectedFilter: ''\n    };\n  },\n  computed: {\n    totalTrees() {\n      return this.trees.length;\n    },\n    averageHeight() {\n      const totalHeight = this.trees.reduce((sum, tree) => sum + tree.height, 0);\n      return (totalHeight / this.trees.length).toFixed(2);\n    },\n    uniqueSpecies() {\n      return [...new Set(this.trees.map(tree => tree.species))];\n    },\n    filteredTrees() {\n      return this.trees.filter(tree => {\n        const matchesSearch = tree.species.toLowerCase().includes(this.searchQuery.toLowerCase());\n        const matchesFilter = this.selectedFilter ? tree.species === this.selectedFilter : true;\n        return matchesSearch && matchesFilter;\n      });\n    }\n  },\n  methods: {\n    editTree(tree) {\n      alert(`Baum bearbeiten: ${tree.species}`);\n    },\n    deleteTree(id) {\n      this.trees = this.trees.filter(tree => tree.id !== id);\n    }\n  }\n};","map":{"version":3,"names":["data","trees","id","species","height","circumference","location","date","searchQuery","selectedFilter","computed","totalTrees","length","averageHeight","totalHeight","reduce","sum","tree","toFixed","uniqueSpecies","Set","map","filteredTrees","filter","matchesSearch","toLowerCase","includes","matchesFilter","methods","editTree","alert","deleteTree"],"sources":["D:\\Studium\\Semester 7\\Bachlor Projekt\\Programm\\project\\src\\components\\OverviewComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Meine gemessenen Bäume</h1>\r\n    <!-- Statistiken -->\r\n    <div class=\"stats\">\r\n      <p>Insgesamt gemessene Bäume: {{ totalTrees }}</p>\r\n      <p>Durchschnittliche Höhe: {{ averageHeight }} m</p>\r\n    </div>\r\n\r\n    <!-- Such- und Filterleiste -->\r\n    <div class=\"filters\">\r\n      <input v-model=\"searchQuery\" placeholder=\"Baumart suchen...\" />\r\n      <select v-model=\"selectedFilter\">\r\n        <option value=\"\">Alle Baumarten</option>\r\n        <option v-for=\"species in uniqueSpecies\" :key=\"species\" :value=\"species\">\r\n          {{ species }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Tabelle -->\r\n    <el-table :data=\"filteredTrees\" style=\"width: 100%\">\r\n      <el-table-column prop=\"species\" label=\"Baumart\" width=\"180\" />\r\n      <el-table-column prop=\"height\" label=\"Höhe (m)\" width=\"120\" />\r\n      <el-table-column prop=\"circumference\" label=\"Umfang (m)\" width=\"120\" />\r\n      <el-table-column prop=\"location\" label=\"Standort\" />\r\n      <el-table-column prop=\"date\" label=\"Datum\" width=\"150\" />\r\n      <el-table-column label=\"Aktionen\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <button @click=\"editTree(scope.row)\">Bearbeiten</button>\r\n          <button @click=\"deleteTree(scope.row.id)\">Löschen</button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  \r\n  data() {\r\n    return {\r\n      trees: [\r\n        { id: 1, species: 'Eiche', height: 15.5, circumference: 2.3, location: 'Waldweg 12, Berlin', date: '2024-12-01' },\r\n        { id: 2, species: 'Buche', height: 20.2, circumference: 3.1, location: 'Parkstraße 5, Hamburg', date: '2024-11-20' },\r\n      ],\r\n      searchQuery: '',\r\n      selectedFilter: '',\r\n    };\r\n  },\r\n  computed: {\r\n    totalTrees() {\r\n      return this.trees.length;\r\n    },\r\n    averageHeight() {\r\n      const totalHeight = this.trees.reduce((sum, tree) => sum + tree.height, 0);\r\n      return (totalHeight / this.trees.length).toFixed(2);\r\n    },\r\n    uniqueSpecies() {\r\n      return [...new Set(this.trees.map(tree => tree.species))];\r\n    },\r\n    filteredTrees() {\r\n      return this.trees.filter(tree => {\r\n        const matchesSearch = tree.species.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n        const matchesFilter = this.selectedFilter ? tree.species === this.selectedFilter : true;\r\n        return matchesSearch && matchesFilter;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    editTree(tree) {\r\n      alert(`Baum bearbeiten: ${tree.species}`);\r\n    },\r\n    deleteTree(id) {\r\n      this.trees = this.trees.filter(tree => tree.id !== id);\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.stats {\r\n  margin-bottom: 20px;\r\n}\r\n.filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n.filters input,\r\n.filters select {\r\n  padding: 5px;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;AAuCA,eAAe;EAEbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,IAAI;QAAEC,aAAa,EAAE,GAAG;QAAEC,QAAQ,EAAE,oBAAoB;QAAEC,IAAI,EAAE;MAAa,CAAC,EACjH;QAAEL,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE,IAAI;QAAEC,aAAa,EAAE,GAAG;QAAEC,QAAQ,EAAE,uBAAuB;QAAEC,IAAI,EAAE;MAAa,CAAC,CACrH;MACDC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACV,KAAK,CAACW,MAAM;IAC1B,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,MAAMC,WAAU,GAAI,IAAI,CAACb,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACb,MAAM,EAAE,CAAC,CAAC;MAC1E,OAAO,CAACU,WAAU,GAAI,IAAI,CAACb,KAAK,CAACW,MAAM,EAAEM,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,OAAO,CAAC,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACnB,KAAK,CAACoB,GAAG,CAACJ,IAAG,IAAKA,IAAI,CAACd,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IACDmB,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAACN,IAAG,IAAK;QAC/B,MAAMO,aAAY,GAAIP,IAAI,CAACd,OAAO,CAACsB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAClB,WAAW,CAACiB,WAAW,CAAC,CAAC,CAAC;QACzF,MAAME,aAAY,GAAI,IAAI,CAAClB,cAAa,GAAIQ,IAAI,CAACd,OAAM,KAAM,IAAI,CAACM,cAAa,GAAI,IAAI;QACvF,OAAOe,aAAY,IAAKG,aAAa;MACvC,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACZ,IAAI,EAAE;MACba,KAAK,CAAC,oBAAoBb,IAAI,CAACd,OAAO,EAAE,CAAC;IAC3C,CAAC;IACD4B,UAAUA,CAAC7B,EAAE,EAAE;MACb,IAAI,CAACD,KAAI,GAAI,IAAI,CAACA,KAAK,CAACsB,MAAM,CAACN,IAAG,IAAKA,IAAI,CAACf,EAAC,KAAMA,EAAE,CAAC;IACxD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}