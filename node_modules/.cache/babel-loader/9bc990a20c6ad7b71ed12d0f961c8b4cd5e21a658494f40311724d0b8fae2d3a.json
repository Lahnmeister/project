{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Distanz zum Baum und Standort\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"distance\"\n  }, \"Wie weit sind Sie vom Baum entfernt (in Metern)?\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"distance\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.distance = $event),\n    required: \"\",\n    min: \"0\",\n    step: \"0.1\",\n    placeholder: \"z. B. 25.5\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.distance]])]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"form-group\"\n  }, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-button\"\n  }, \"Absenden\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getLocation && $options.getLocation(...args)),\n    class: \"location-button\"\n  }, \"Standort abrufen\")]), _createCommentVNode(\" Anzeige des Standorts \"), $data.location ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, \"Aktueller Standort: \" + _toDisplayString($data.location.latitude) + \"°, \" + _toDisplayString($data.location.longitude) + \"°\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Genauigkeit: \" + _toDisplayString($data.location.accuracy) + \" Meter\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Anzeige der eingegebenen Distanz \"), $data.submitted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createTextVNode(\"Die eingegebene Distanz zum Baum beträgt: \")), _createElementVNode(\"strong\", null, _toDisplayString($data.distance) + \" Meter\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_2","for","type","id","$event","$data","distance","required","min","step","placeholder","_hoisted_3","onClick","getLocation","_createCommentVNode","location","_hoisted_4","_toDisplayString","latitude","longitude","accuracy","submitted","_hoisted_5","_createTextVNode"],"sources":["C:\\Users\\madiw\\Desktop\\Hochschule\\7. Semester\\Bachelorprojekt\\projekt\\src\\components\\testapp.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <h1>Distanz zum Baum und Standort</h1>\r\n  \r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label for=\"distance\">Wie weit sind Sie vom Baum entfernt (in Metern)?</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"distance\"\r\n            v-model=\"distance\"\r\n            required\r\n            min=\"0\"\r\n            step=\"0.1\"\r\n            placeholder=\"z. B. 25.5\"\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"submit-button\">Absenden</button>\r\n        </div>\r\n      </form>\r\n  \r\n      <div class=\"form-group\">\r\n        <button @click=\"getLocation\" class=\"location-button\">Standort abrufen</button>\r\n      </div>\r\n  \r\n      <!-- Anzeige des Standorts -->\r\n      <div v-if=\"location\">\r\n        <p>Aktueller Standort: {{ location.latitude }}°, {{ location.longitude }}°</p>\r\n        <p>Genauigkeit: {{ location.accuracy }} Meter</p>\r\n      </div>\r\n  \r\n      <!-- Anzeige der eingegebenen Distanz -->\r\n      <div v-if=\"submitted\">\r\n        <p>Die eingegebene Distanz zum Baum beträgt: <strong>{{ distance }} Meter</strong></p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Geolocation } from '@capacitor/geolocation';\r\n  \r\n  export default {\r\n    name: 'DistanceForm',\r\n    data() {\r\n      return {\r\n        distance: '', // Speichert die eingegebene Distanz\r\n        submitted: false, // Gibt an, ob das Formular bereits abgesendet wurde\r\n        location: null, // Speichert den aktuellen Standort\r\n      };\r\n    },\r\n    methods: {\r\n      async handleSubmit() {\r\n        this.submitted = true;\r\n        // Hier könnte die Distanz gespeichert werden (z.B. in localStorage oder Vuex)\r\n        localStorage.setItem('distanceToTree', this.distance);\r\n        console.log(`Distanz zum Baum gespeichert: ${this.distance} Meter`);\r\n      },\r\n  \r\n      async getLocation() {\r\n        try {\r\n          const position = await Geolocation.getCurrentPosition();\r\n          this.location = position.coords;\r\n          console.log('Standort abgerufen:', this.location);\r\n        } catch (error) {\r\n          console.error('Fehler beim Abrufen des Standorts:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Grundlegendes Styling für das Formular */\r\n  .form-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    font-size: 16px;\r\n    color: #333;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button.submit-button, .location-button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  button.submit-button:hover, .location-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  div p {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #333;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAIlBA,KAAK,EAAC;AAAY;;EAkBpBA,KAAK,EAAC;AAAY;;EAvB7BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAoCM,OApCNC,UAoCM,G,0BAnCJC,mBAAA,CAAsC,YAAlC,+BAA6B,sBAEjCA,mBAAA,CAiBO;IAjBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCJ,mBAAA,CAWM,OAXNO,UAWM,G,0BAVJP,mBAAA,CAA8E;IAAvEQ,GAAG,EAAC;EAAU,GAAC,kDAAgD,sB,gBACtER,mBAAA,CAQE;IAPAS,IAAI,EAAC,QAAQ;IACbC,EAAE,EAAC,UAAU;IATzB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAUqBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,QAAQ,EAAR,EAAQ;IACRC,GAAG,EAAC,GAAG;IACPC,IAAI,EAAC,KAAK;IACVC,WAAW,EAAC;iDAJHL,KAAA,CAAAC,QAAQ,E,+BAQrBb,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAY,IACrBI,mBAAA,CAA6D;IAArDS,IAAI,EAAC,QAAQ;IAACb,KAAK,EAAC;KAAgB,UAAQ,E,iDAIxDI,mBAAA,CAEM,OAFNkB,UAEM,GADJlB,mBAAA,CAA8E;IAArEmB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAe,WAAA,IAAAf,QAAA,CAAAe,WAAA,IAAAhB,IAAA,CAAW;IAAER,KAAK,EAAC;KAAkB,kBAAgB,E,GAGvEyB,mBAAA,2BAA8B,EACnBT,KAAA,CAAAU,QAAQ,I,cAAnBxB,mBAAA,CAGM,OA/BZyB,UAAA,GA6BQvB,mBAAA,CAA8E,WAA3E,sBAAoB,GAAAwB,gBAAA,CAAGZ,KAAA,CAAAU,QAAQ,CAACG,QAAQ,IAAG,KAAG,GAAAD,gBAAA,CAAGZ,KAAA,CAAAU,QAAQ,CAACI,SAAS,IAAG,GAAC,iBAC1E1B,mBAAA,CAAiD,WAA9C,eAAa,GAAAwB,gBAAA,CAAGZ,KAAA,CAAAU,QAAQ,CAACK,QAAQ,IAAG,QAAM,gB,KA9BrDN,mBAAA,gBAiCMA,mBAAA,sCAAyC,EAC9BT,KAAA,CAAAgB,SAAS,I,cAApB9B,mBAAA,CAEM,OApCZ+B,UAAA,GAmCQ7B,mBAAA,CAAsF,Y,0BAnC9F8B,gBAAA,CAmCW,4CAA0C,IAAA9B,mBAAA,CAAqC,gBAAAwB,gBAAA,CAA1BZ,KAAA,CAAAC,QAAQ,IAAG,QAAM,gB,OAnCjFQ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}