{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { Geolocation } from '@capacitor/geolocation';\nexport default {\n  name: 'DistanceForm',\n  data() {\n    return {\n      distance: '',\n      // Speichert die eingegebene Distanz\n      submitted: false,\n      // Gibt an, ob das Formular bereits abgesendet wurde\n      location: null // Speichert den aktuellen Standort\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.submitted = true;\n      localStorage.setItem('distanceToTree', this.distance);\n      console.log(`Distanz zum Baum: ${this.distance} Meter`);\n    },\n    async getLocation() {\n      try {\n        const position = await Geolocation.getCurrentPosition({\n          enableHighAccuracy: true\n        });\n        this.location = position.coords;\n        console.log('Standort abgerufen:', this.location);\n      } catch (error) {\n        console.error('Fehler beim Abrufen des Standorts:', error);\n      }\n    },\n    // Neue Methode zum Erstellen der JSON-Datei\n    generateJSON() {\n      const data = {\n        distance: this.distance,\n        location: {\n          latitude: this.location.latitude,\n          longitude: this.location.longitude,\n          accuracy: this.location.accuracy\n        }\n      };\n\n      // Erstelle einen Blob aus dem JSON-Daten\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\n        type: 'application/json'\n      });\n\n      // Erstelle ein Download-Link\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'location_and_distance.json';\n      a.click();\n\n      // Gebe den Blob-URL frei\n      URL.revokeObjectURL(url);\n    }\n  }\n};","map":{"version":3,"names":["Geolocation","name","data","distance","submitted","location","methods","handleSubmit","localStorage","setItem","console","log","getLocation","position","getCurrentPosition","enableHighAccuracy","coords","error","generateJSON","latitude","longitude","accuracy","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL"],"sources":["C:\\Users\\madiw\\Desktop\\Hochschule\\7. Semester\\Bachelorprojekt\\projekt\\src\\components\\testapp.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h1>Distanz zum Baum und Standort</h1>\r\n\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"distance\">Wie weit sind Sie vom Baum entfernt (in Metern)?</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"distance\"\r\n          v-model=\"distance\"\r\n          required\r\n          min=\"0\"\r\n          step=\"0.1\"\r\n          placeholder=\"z. B. 25.5\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"submit-button\">Absenden</button>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"form-group\">\r\n      <button @click=\"getLocation\" class=\"location-button\">Standort abrufen</button>\r\n    </div>\r\n\r\n    <!-- Anzeige des Standorts -->\r\n    <div v-if=\"location\">\r\n      <p>Aktueller Standort: {{ location.latitude }}째, {{ location.longitude }}째</p>\r\n      <p>Genauigkeit: {{ location.accuracy }} Meter</p>\r\n    </div>\r\n\r\n    <!-- Anzeige der eingegebenen Distanz -->\r\n    <div v-if=\"submitted\">\r\n      <p>Die eingegebene Distanz zum Baum betr채gt: <strong>{{ distance }} Meter</strong></p>\r\n      <button @click=\"generateJSON\" class=\"generate-json-button\">JSON Datei erstellen</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Geolocation } from '@capacitor/geolocation';\r\n\r\nexport default {\r\n  name: 'DistanceForm',\r\n  data() {\r\n    return {\r\n      distance: '', // Speichert die eingegebene Distanz\r\n      submitted: false, // Gibt an, ob das Formular bereits abgesendet wurde\r\n      location: null, // Speichert den aktuellen Standort\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.submitted = true;\r\n      localStorage.setItem('distanceToTree', this.distance);\r\n      console.log(`Distanz zum Baum: ${this.distance} Meter`);\r\n    },\r\n\r\n    async getLocation() {\r\n      try {\r\n        const position = await Geolocation.getCurrentPosition({ enableHighAccuracy: true });\r\n        this.location = position.coords;\r\n        console.log('Standort abgerufen:', this.location);\r\n      } catch (error) {\r\n        console.error('Fehler beim Abrufen des Standorts:', error);\r\n      }\r\n    },\r\n\r\n    // Neue Methode zum Erstellen der JSON-Datei\r\n    generateJSON() {\r\n      const data = {\r\n        distance: this.distance,\r\n        location: {\r\n          latitude: this.location.latitude,\r\n          longitude: this.location.longitude,\r\n          accuracy: this.location.accuracy,\r\n        },\r\n      };\r\n\r\n      // Erstelle einen Blob aus dem JSON-Daten\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n\r\n      // Erstelle ein Download-Link\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'location_and_distance.json';\r\n      a.click();\r\n\r\n      // Gebe den Blob-URL frei\r\n      URL.revokeObjectURL(url);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Grundlegendes Styling f체r das Formular */\r\n.form-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n  display: block;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton.submit-button, .location-button, .generate-json-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton.submit-button:hover, .location-button:hover, .generate-json-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\ndiv p {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":";;;AA0CA,SAASA,WAAU,QAAS,wBAAwB;AAEpD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,SAAS,EAAE,KAAK;MAAE;MAClBC,QAAQ,EAAE,IAAI,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACH,SAAQ,GAAI,IAAI;MACrBI,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAACN,QAAQ,CAAC;MACrDO,OAAO,CAACC,GAAG,CAAC,qBAAqB,IAAI,CAACR,QAAQ,QAAQ,CAAC;IACzD,CAAC;IAED,MAAMS,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,WAAW,CAACc,kBAAkB,CAAC;UAAEC,kBAAkB,EAAE;QAAK,CAAC,CAAC;QACnF,IAAI,CAACV,QAAO,GAAIQ,QAAQ,CAACG,MAAM;QAC/BN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACN,QAAQ,CAAC;MACnD,EAAE,OAAOY,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAED;IACAC,YAAYA,CAAA,EAAG;MACb,MAAMhB,IAAG,GAAI;QACXC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBE,QAAQ,EAAE;UACRc,QAAQ,EAAE,IAAI,CAACd,QAAQ,CAACc,QAAQ;UAChCC,SAAS,EAAE,IAAI,CAACf,QAAQ,CAACe,SAAS;UAClCC,QAAQ,EAAE,IAAI,CAAChB,QAAQ,CAACgB;QAC1B;MACF,CAAC;;MAED;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACvB,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAAEwB,IAAI,EAAE;MAAmB,CAAC,CAAC;;MAEpF;MACA,MAAMC,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;MACrC,MAAMQ,CAAA,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAG,GAAIN,GAAG;MACZG,CAAC,CAACI,QAAO,GAAI,4BAA4B;MACzCJ,CAAC,CAACK,KAAK,CAAC,CAAC;;MAET;MACAP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}