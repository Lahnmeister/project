{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  border: \"1\",\n  style: {\n    \"width\": \"100%\",\n    \"border-collapse\": \"collapse\",\n    \"text-align\": \"left\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Meine gemessenen Bäume\", -1 /* HOISTED */)), _createCommentVNode(\" Tabelle \"), _createElementVNode(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Baumart\"), _createElementVNode(\"th\", null, \"Höhe (m)\"), _createElementVNode(\"th\", null, \"Umfang (m)\"), _createElementVNode(\"th\", null, \"Standort\"), _createElementVNode(\"th\", null, \"Datum\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.trees, tree => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: tree.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(tree.species), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(tree.height), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(tree.circumference), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(tree.location), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(tree.date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["border","style","_createElementBlock","_createElementVNode","_createCommentVNode","_hoisted_1","_Fragment","_renderList","$data","trees","tree","key","id","_toDisplayString","species","height","circumference","location","date"],"sources":["D:\\Studium\\Semester 7\\Bachlor Projekt\\Programm\\project\\src\\components\\OverviewComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Meine gemessenen Bäume</h1>\r\n    <!-- Tabelle -->\r\n    <table border=\"1\" style=\"width: 100%; border-collapse: collapse; text-align: left;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Baumart</th>\r\n          <th>Höhe (m)</th>\r\n          <th>Umfang (m)</th>\r\n          <th>Standort</th>\r\n          <th>Datum</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"tree in trees\" :key=\"tree.id\">\r\n          <td>{{ tree.species }}</td>\r\n          <td>{{ tree.height }}</td>\r\n          <td>{{ tree.circumference }}</td>\r\n          <td>{{ tree.location }}</td>\r\n          <td>{{ tree.date }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      trees: [\r\n        {\r\n          id: 1,\r\n          species: 'Eiche',\r\n          height: 15.5,\r\n          circumference: 2.3,\r\n          location: 'Waldweg 12, Berlin',\r\n          date: '2024-12-01',\r\n        },\r\n        {\r\n          id: 2,\r\n          species: 'Buche',\r\n          height: 20.2,\r\n          circumference: 3.1,\r\n          location: 'Parkstraße 5, Hamburg',\r\n          date: '2024-11-20',\r\n        },\r\n        {\r\n          id: 3,\r\n          species: 'Ahorn',\r\n          height: 10.8,\r\n          circumference: 1.7,\r\n          location: 'Forstweg 3, München',\r\n          date: '2024-12-05',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  margin-top: 20px;\r\n}\r\n\r\nth, td {\r\n  padding: 10px;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n</style>\r\n"],"mappings":";;EAIWA,MAAM,EAAC,GAAG;EAACC,KAAiE,EAAjE;IAAA;IAAA;IAAA;EAAA;;;uBAHpBC,mBAAA,CAuBM,c,0BAtBJC,mBAAA,CAA+B,YAA3B,wBAAsB,sBAC1BC,mBAAA,aAAgB,EAChBD,mBAAA,CAmBQ,SAnBRE,UAmBQ,G,0BAlBNF,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAc,YAAV,OAAK,E,wBAGbA,mBAAA,CAQQ,iB,kBAPND,mBAAA,CAMKI,SAAA,QArBbC,WAAA,CAe2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfR,mBAAA,CAMK;MANsBS,GAAG,EAAED,IAAI,CAACE;QACnCT,mBAAA,CAA2B,YAAAU,gBAAA,CAApBH,IAAI,CAACI,OAAO,kBACnBX,mBAAA,CAA0B,YAAAU,gBAAA,CAAnBH,IAAI,CAACK,MAAM,kBAClBZ,mBAAA,CAAiC,YAAAU,gBAAA,CAA1BH,IAAI,CAACM,aAAa,kBACzBb,mBAAA,CAA4B,YAAAU,gBAAA,CAArBH,IAAI,CAACO,QAAQ,kBACpBd,mBAAA,CAAwB,YAAAU,gBAAA,CAAjBH,IAAI,CAACQ,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}