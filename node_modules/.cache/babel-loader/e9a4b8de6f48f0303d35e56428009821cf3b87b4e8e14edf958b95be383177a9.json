{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  action: \"\",\n  method: \"POST\"\n};\nconst _hoisted_2 = {\n  class: \"formbold-input-flex\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"map-container\"\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", _hoisted_1, [_cache[1] || (_cache[1] = _createStaticVNode(\"<h2 class=\\\"formbold-form-title\\\">Baum registrieren</h2><div class=\\\"formbold-input-flex\\\"><div><label for=\\\"name-of-measurer\\\" class=\\\"formbold-form-label\\\"> Name of the Measurer* </label><input type=\\\"text\\\" name=\\\"name-of-measurer\\\" id=\\\"name-of-measurer\\\" class=\\\"formbold-form-input\\\"></div><div><label for=\\\"tree-type\\\" class=\\\"formbold-form-label\\\"> Tree type* </label><input type=\\\"text\\\" name=\\\"tree-type\\\" id=\\\"tree-type\\\" class=\\\"formbold-form-input\\\"></div></div><div class=\\\"formbold-input-flex\\\"><div><label for=\\\"Tree Height\\\" class=\\\"formbold-form-label\\\"> Tree Height* </label><input type=\\\"number\\\" name=\\\"tree-height\\\" id=\\\"tree-height\\\" class=\\\"formbold-form-input\\\"></div><div><label for=\\\"phone\\\" class=\\\"formbold-form-label\\\"> Inclination in degrees* </label><input type=\\\"number\\\" name=\\\"inclination-in-degrees\\\" id=\\\"inclination-in-degrees\\\" class=\\\"formbold-form-input\\\"></div></div><div class=\\\"formbold-input-flex\\\"><div><label for=\\\"trunk-diameter-in-cm\\\" class=\\\"formbold-form-label\\\"> Trunk Diameter in cm* </label><input type=\\\"text\\\" name=\\\"trunk-diameter-in-cm\\\" id=\\\"trunk-diameter-in-cm\\\" class=\\\"formbold-form-input\\\"></div></div>\", 4)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Anzeige der Karte \"), $data.location ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"iframe\", {\n    src: $options.iframeUrl,\n    style: {\n      \"border\": \"1px solid black\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_4), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true)]), _cache[2] || (_cache[2] = _createElementVNode(\"p\", {\n    class: \"formbold-policy\"\n  }, [_createTextVNode(\" privacy policy oder so \"), _createElementVNode(\"a\", {\n    href: \"#\"\n  }, \"privacy policy.\")], -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    class: \"formbold-btn\"\n  }, \"Baum hinzufügen\", -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["action","method","class","key","_createElementBlock","_hoisted_1","_createStaticVNode","_createElementVNode","_hoisted_2","_createCommentVNode","$data","location","_hoisted_3","src","$options","iframeUrl","style","_hoisted_4","_createTextVNode","href"],"sources":["C:\\Users\\deine\\Documents\\Workspace\\project\\src\\components\\TreeForm.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" method=\"POST\">\r\n      <h2 class=\"formbold-form-title\">Baum registrieren</h2>\r\n\r\n      <div class=\"formbold-input-flex\">\r\n        <div>\r\n          <label for=\"name-of-measurer\" class=\"formbold-form-label\">\r\n            Name of the Measurer*\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name-of-measurer\"\r\n            id=\"name-of-measurer\"\r\n            class=\"formbold-form-input\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"tree-type\" class=\"formbold-form-label\"> \r\n            Tree type* </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tree-type\"\r\n            id=\"tree-type\"\r\n            class=\"formbold-form-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"formbold-input-flex\">\r\n        <div>\r\n          <label for=\"Tree Height\" class=\"formbold-form-label\">\r\n            Tree Height* </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"tree-height\"\r\n            id=\"tree-height\"\r\n            class=\"formbold-form-input\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"phone\" class=\"formbold-form-label\">\r\n            Inclination in degrees* </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"inclination-in-degrees\"\r\n            id=\"inclination-in-degrees\"\r\n            class=\"formbold-form-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"formbold-input-flex\">\r\n        <div>\r\n          <label for=\"trunk-diameter-in-cm\" class=\"formbold-form-label\">\r\n            Trunk Diameter in cm* </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"trunk-diameter-in-cm\"\r\n            id=\"trunk-diameter-in-cm\"\r\n            class=\"formbold-form-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"formbold-input-flex\">\r\n        <!-- Anzeige der Karte -->\r\n        <div class=\"map-container\" v-if=\"location\">\r\n          <iframe :src=\"iframeUrl\" style=\"border: 1px solid black\"></iframe>\r\n          <br />\r\n        </div>\r\n      </div>\r\n\r\n      <p class=\"formbold-policy\">\r\n        privacy policy oder so\r\n        <a href=\"#\">privacy policy.</a>\r\n      </p>\r\n      <button class=\"formbold-btn\">Baum hinzufügen</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { Geolocation } from '@capacitor/geolocation';\r\n\r\nexport default {\r\n  name: 'DistanceForm',\r\n  data() {\r\n    // Initialisierung\r\n    return {\r\n      distance: '',\r\n      submitted: false,\r\n      location: null,\r\n    };\r\n  },\r\n  computed: {\r\n    // Karte mit gegebenem Standort ausgeben\r\n    iframeUrl() {\r\n      const { latitude, longitude } = this.location;\r\n      return `https://www.openstreetmap.org/export/embed.html?bbox=${longitude}%2C${latitude}%2C${longitude}%2C${latitude}&layer=mapnik&marker=${latitude}%2C${longitude}`;\r\n    }\r\n  },methods: {\r\n    async handleSubmit() {\r\n      // Umschreiben der JSON\r\n      this.submitted = true;\r\n      const data = {\r\n        distance: this.distance,\r\n        location: {\r\n          latitude: this.location.latitude,\r\n          longitude: this.location.longitude,\r\n          accuracy: this.location.accuracy,\r\n        },\r\n      };\r\n\r\n      const jsonData = JSON.stringify(data, null, 2);\r\n\r\n      const blob = new Blob([jsonData], { type: 'application/json' });\r\n\r\n      const a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = 'data.json';\r\n      a.click();\r\n      URL.revokeObjectURL(a.href);\r\n    },\r\n\r\n    // Standort abrufen\r\n    async getLocation() {\r\n      try {\r\n        const position = await Geolocation.getCurrentPosition({ enableHighAccuracy: true });\r\n        if (position.coords) {\r\n          this.location = position.coords;\r\n        } else {\r\n          console.log(\"Test\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Test\");\r\n      }\r\n    }\r\n  },\r\n  created: function(){\r\n        this.getLocation()\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n\r\n    .formbold-form-title {\r\n    color: #07074d;\r\n    font-weight: 600;\r\n    font-size: 28px;\r\n    line-height: 35px;\r\n    width: 60%;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .formbold-form-input {\r\n    text-align: center;\r\n    width: 70%;\r\n    padding: 8px 22px;\r\n    border-radius: 5px;\r\n    border: 1px solid #dde3ec;\r\n    background: #ffffff;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    color: #536387;\r\n    outline: none;\r\n    resize: none;\r\n  }\r\n\r\n  .formbold-input-flex {\r\n    display: flex;\r\n    gap: 5px;\r\n    margin-bottom: 15px;\r\n  }\r\n  .formbold-input-flex > div {\r\n    width: 50%;\r\n  }\r\n\r\n  .formbold-form-label {\r\n    color: #536387;\r\n    font-size: 14px;\r\n    line-height: 24px;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .formbold-btn {\r\n    text-align: center;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    padding: 14px 25px;\r\n    border: none;\r\n    font-weight: 500;\r\n    background-color: #6a64f1;\r\n    color: white;\r\n    cursor: pointer;\r\n    margin-top: 25px;\r\n  }\r\n  .formbold-btn:hover {\r\n    box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);\r\n  }\r\n\r\n</style>"],"mappings":";;EACUA,MAAM,EAAC,EAAE;EAACC,MAAM,EAAC;;;EA+DhBC,KAAK,EAAC;AAAqB;;EAhEtCC,GAAA;EAkEaD,KAAK,EAAC;;mBAlEnB;;uBACIE,mBAAA,CA4EK,QA5ELC,UA4EK,G,0BA7ETC,kBAAA,ypCAgEMC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,uBAA0B,EACOC,KAAA,CAAAC,QAAQ,I,cAAzCP,mBAAA,CAGM,OAHNQ,UAGM,GAFJL,mBAAA,CAAkE;IAAzDM,GAAG,EAAEC,QAAA,CAAAC,SAAS;IAAEC,KAA+B,EAA/B;MAAA;IAAA;0BAnEnCC,UAAA,G,0BAoEUV,mBAAA,CAAM,qC,KApEhBE,mBAAA,e,6BAwEMF,mBAAA,CAGI;IAHDL,KAAK,EAAC;EAAiB,IAxEhCgB,gBAAA,CAwEiC,0BAEzB,GAAAX,mBAAA,CAA+B;IAA5BY,IAAI,EAAC;EAAG,GAAC,iBAAe,E,gDAE7BZ,mBAAA,CAAqD;IAA7CL,KAAK,EAAC;EAAc,GAAC,iBAAe,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}